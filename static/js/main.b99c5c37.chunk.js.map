{"version":3,"sources":["Pages/SearchPage.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","logo","paddingTop","search","searchButton","paddingBottom","results","linkCheck","difference","position","top","zIndex","primary","main","color","progress","marginLeft","spacing","icon","SearchPage","props","hostUrl","useState","productResult","setProductResult","keyword","setKeyword","isSearchClicked","setIsSearchClicked","open","setOpen","message","setMessage","product1","setProduct1","product2","setProduct2","classes","fetchProductsFromApi","fetch","method","then","response","json","status","result","catch","error","toString","includes","ProductResultsComponent","className","Typography","component","totalResults","ProductDifferenceComponent","price","Fragment","src","width","height","alt","TextField","id","label","value","onChange","e","target","onKeyDown","key","fullWidth","required","CircularProgress","Button","variant","onClick","GridList","products","map","product","index","GridListTile","Link","href","sourceUrl","imageUrl","name","GridListTileBar","title","subtitle","source","actionIcon","Tooltip","Checkbox","checked","inputProps","event","handleChange","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","Copyright","align","Date","getFullYear","OpenSourceLink","App","Container","maxWidth","Settings","createTheme","secondary","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.b99c5c37.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  CircularProgress,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Button,\r\n  TextField,\r\n  Link,\r\n  Snackbar,\r\n  Checkbox,\r\n  Tooltip,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ProductCollection from \"../Contracts/ProductCollection\";\r\nimport Product from \"../Contracts/Product\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  logo: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"24px\",\r\n  },\r\n  search: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    paddingTop: \"12px\",\r\n  },\r\n  searchButton: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"12px\",\r\n    paddingBottom: \"12px\",\r\n  },\r\n  results: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  linkCheck: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  difference: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    position: \"sticky\",\r\n    top: 10,\r\n    zIndex: 1,\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: \"#fff\",\r\n  },\r\n  progress: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"rgba(255, 255, 255, 0.54)\",\r\n  },\r\n}));\r\n\r\ninterface SearchPageProps {\r\n  hostUrl: string;\r\n}\r\n\r\nconst SearchPage = (props: SearchPageProps) => {\r\n  const { hostUrl } = props;\r\n  const [productResult, setProductResult] = useState<ProductCollection | null>(\r\n    null\r\n  );\r\n  const [keyword, setKeyword] = useState<string | null>(null);\r\n  const [isSearchClicked, setIsSearchClicked] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [product1, setProduct1] = useState<Product | null>(null);\r\n  const [product2, setProduct2] = useState<Product | null>(null);\r\n  const classes = useStyles();\r\n\r\n  const fetchProductsFromApi = () => {\r\n    if (keyword) {\r\n      var requestOptions = {\r\n        method: \"GET\",\r\n      };\r\n      setProductResult(null);\r\n      setIsSearchClicked(true);\r\n      setProduct1(null);\r\n      setProduct2(null);\r\n      fetch(`${hostUrl}/api/products?q=${keyword}`, requestOptions)\r\n        .then((response) => {\r\n          const json = response.json();\r\n          return { json: json, status: response.status };\r\n        })\r\n        .then((result) => {\r\n          setIsSearchClicked(false);\r\n          if (result.status === 200) {\r\n            return result.json;\r\n          } else if (result.status === 404) {\r\n            setMessage(`No products found for your search query: ${keyword}`);\r\n            setOpen(true);\r\n          } else {\r\n            setMessage(\"An error occurred while processing your request.\");\r\n            setOpen(true);\r\n          }\r\n        })\r\n        .then((result) => {\r\n          if (result) {\r\n            setProductResult(result);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setIsSearchClicked(false);\r\n          if (error.toString().includes(\"NetworkError\")) {\r\n            setMessage(\r\n              \"Error connecting to the back-end server or not connected to the internet\"\r\n            );\r\n          } else {\r\n            setMessage(`Unexpected error occurred: ${error}`);\r\n          }\r\n          setOpen(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    fetchProductsFromApi();\r\n  };\r\n\r\n  const handleKeyDown = (e: any) => {\r\n    if (e.key === \"Enter\") {\r\n      fetchProductsFromApi();\r\n    }\r\n  };\r\n\r\n  const ProductResultsComponent = () => {\r\n    return (\r\n      <div className={classes.results}>\r\n        {productResult !== null && (\r\n          <Typography component=\"p\">\r\n            Total results: {productResult.totalResults}\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const ProductDifferenceComponent = () => {\r\n    return (\r\n      product1 &&\r\n      product2 && (\r\n        <div className={classes.difference}>\r\n          {productResult !== null && (\r\n            <Typography component=\"p\" color=\"inherit\">\r\n              Price difference: R\r\n              {product1.price > product2.price\r\n                ? product1.price - product2.price\r\n                : product2.price - product1.price}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleClose = (event: any, reason: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = (event: any, product: Product) => {\r\n    if (event.target.checked) {\r\n      setProduct1(product);\r\n      if (product2 === null && product !== product1) {\r\n        setProduct2(product);\r\n      }\r\n    } else {\r\n      setProduct1(null);\r\n      setProduct2(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.logo}>\r\n        <img\r\n          src=\"logo.png\"\r\n          width=\"25%\"\r\n          height=\"25%\"\r\n          alt=\"Super Saiyan Search Logo\"\r\n        />\r\n      </div>\r\n      <div className={classes.search}>\r\n        {!isSearchClicked && (\r\n          <TextField\r\n            id=\"search\"\r\n            label=\"Keyword\"\r\n            aria-label=\"Keyword\"\r\n            value={keyword !== null ? keyword : \"\"}\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            onKeyDown={handleKeyDown}\r\n            fullWidth\r\n            required\r\n          />\r\n        )}\r\n        {productResult === null && isSearchClicked && (\r\n          <div className={classes.progress}>\r\n            <CircularProgress aria-label=\"loading\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={classes.searchButton}>\r\n        {!isSearchClicked && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            aria-label=\"Search\"\r\n            onClick={handleButtonClick}\r\n          >\r\n            Search\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <ProductResultsComponent />\r\n      <ProductDifferenceComponent />\r\n      <div className={classes.root}>\r\n        <GridList component=\"ul\">\r\n          {productResult !== null &&\r\n            productResult.products.map((product, index) => (\r\n              <GridListTile key={`${product.source}-${index}`}>\r\n                <div className={classes.linkCheck}>\r\n                  <Link\r\n                    color=\"inherit\"\r\n                    href={product.sourceUrl}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <img\r\n                      src={product.imageUrl}\r\n                      alt={product.name}\r\n                      width=\"128px\"\r\n                      height=\"128px\"\r\n                    />\r\n                  </Link>\r\n                  <GridListTileBar\r\n                    title={\r\n                      <Link\r\n                        color=\"inherit\"\r\n                        href={product.sourceUrl}\r\n                        target=\"_blank\"\r\n                      >\r\n                        {product.name}\r\n                      </Link>\r\n                    }\r\n                    subtitle={\r\n                      <React.Fragment>\r\n                        <div>Price: R{product.price}</div>\r\n                        <div>Source: {product.source}</div>\r\n                      </React.Fragment>\r\n                    }\r\n                    actionIcon={\r\n                      <Tooltip title={product.name} aria-label={product.name}>\r\n                        <InfoIcon />\r\n                      </Tooltip>\r\n                    }\r\n                  />\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    checked={\r\n                      product1 === product\r\n                        ? true\r\n                        : product2 === product\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    inputProps={{ \"aria-label\": product.name }}\r\n                    onChange={(event) => handleChange(event, product)}\r\n                  />\r\n                </div>\r\n              </GridListTile>\r\n            ))}\r\n        </GridList>\r\n      </div>\r\n      <ProductResultsComponent />\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={open}\r\n        message={<span>{message}</span>}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import { Typography, Container, Link } from \"@material-ui/core\";\r\nimport SearchPage from \"./Pages/SearchPage\";\r\nimport Settings from \"./settings.json\";\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright \"}\r\n      {\"\\u2122\"} Super Saiyan Search {new Date().getFullYear()}\r\n      {\".\"}\r\n      <OpenSourceLink />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst OpenSourceLink = () => {\r\n  return (\r\n    <div>\r\n      <Link\r\n        href=\"https://github.com/chesterc314/supersaiyansearch\"\r\n        target=\"_blank\"\r\n      >\r\n        <img\r\n          src=\"github.ico\"\r\n          alt=\"Github logo\"\r\n          width=\"64px\"\r\n          height=\"64px\"\r\n        ></img>\r\n        <div>Source code</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nconst App = () => {\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <SearchPage hostUrl={Settings.hostUrl as string} />\r\n      <Copyright />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createTheme, Theme } from '@material-ui/core/styles';\r\n\r\nconst theme: Theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#007bff',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}