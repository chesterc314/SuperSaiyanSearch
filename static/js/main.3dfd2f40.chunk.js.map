{"version":3,"sources":["Pages/SearchPage.jsx","App.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","logo","paddingTop","search","searchButton","paddingBottom","results","linkCheck","difference","position","top","zIndex","primary","main","color","progress","marginLeft","spacing","TitlebarGridList","hostUrl","isTest","q","useState","productResult","setProductResult","keyword","setKeyword","isSearchClicked","setIsSearchClicked","open","setOpen","message","setMessage","product1","setProduct1","product2","setProduct2","classes","history","useHistory","fetchProductsFromApi","testPayload","fetch","method","then","response","json","status","result","catch","error","toString","includes","resultsComponent","className","Typography","component","totalResults","Fragment","src","width","height","alt","TextField","id","label","aria-label","value","onChange","e","target","onKeyDown","key","push","fullWidth","required","CircularProgress","Button","variant","onClick","price","GridList","products","map","product","index","GridListTile","source","Link","href","sourceUrl","imageUrl","name","GridListTileBar","title","subtitle","Checkbox","checked","inputProps","event","handleChange","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","reason","Copyright","align","Date","getFullYear","App","query","URLSearchParams","useLocation","Container","maxWidth","Settings","get","createMuiTheme","secondary","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.3dfd2f40.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    makeStyles,\r\n    Typography,\r\n    CircularProgress,\r\n    GridList,\r\n    GridListTile,\r\n    GridListTileBar,\r\n    Button,\r\n    TextField,\r\n    Link,\r\n    Snackbar,\r\n    Checkbox\r\n} from '@material-ui/core';\r\nimport testPayload from './testpayload.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    logo: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '24px',\r\n    },\r\n    search: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        paddingTop: '12px',\r\n    },\r\n    searchButton: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '12px',\r\n        paddingBottom: '12px',\r\n    },\r\n    results: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingTop: '8px',\r\n        paddingBottom: '8px',\r\n    },\r\n    linkCheck: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    difference: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'sticky',\r\n        top: 10,\r\n        zIndex: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: '#fff',\r\n    },\r\n    progress: {\r\n        display: 'flex',\r\n        '& > * + *': {\r\n            marginLeft: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function TitlebarGridList({ hostUrl, isTest, q }) {\r\n    const [productResult, setProductResult] = useState(null);\r\n    const [keyword, setKeyword] = useState(null);\r\n    const [isSearchClicked, setIsSearchClicked] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [product1, setProduct1] = useState(null);\r\n    const [product2, setProduct2] = useState(null);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    if (q) {\r\n        setKeyword(q);\r\n        fetchProductsFromApi();\r\n    }\r\n\r\n    const fetchProductsFromApi = () => {\r\n        if (keyword) {\r\n            var requestOptions = {\r\n                method: 'GET'\r\n            };\r\n            setProductResult(null);\r\n            setIsSearchClicked(true);\r\n            setProduct1(null);\r\n            setProduct2(null);\r\n            if (isTest) {\r\n                setIsSearchClicked(false);\r\n                setProductResult(testPayload);\r\n            } else {\r\n                fetch(`${hostUrl}/api/products?q=${keyword}`, requestOptions)\r\n                    .then(response => {\r\n                        const json = response.json();\r\n                        return { json: json, status: response.status };\r\n                    })\r\n                    .then(result => {\r\n                        setIsSearchClicked(false);\r\n                        if (result.status === 200) {\r\n                            return result.json;\r\n                        } else if (result.status === 404) {\r\n                            setMessage(`No products found for your search query: ${keyword}`);\r\n                            setOpen(true);\r\n                        } else {\r\n                            setMessage(\"An error occurred while processing your request.\");\r\n                            setOpen(true);\r\n                        }\r\n                    })\r\n                    .then(result => {\r\n                        if (result) {\r\n                            setProductResult(result);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        setIsSearchClicked(false);\r\n                        if (error.toString().includes(\"NetworkError\")) {\r\n                            setMessage(\"Error connecting to the back-end server or not connected to the internet\");\r\n                        } else {\r\n                            setMessage(`Unexpected error occurred: ${error}`);\r\n                        }\r\n                        setOpen(true);\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleButtonClick = () => {\r\n        history.push(`/?q=${keyword}`);\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            history.push(`/?q=${keyword}`);\r\n        }\r\n    };\r\n\r\n    const resultsComponent = () => (<div className={classes.results}>\r\n        {(productResult !== null) && <Typography component=\"p\">Total results: {productResult.totalResults}</Typography>}\r\n    </div>);\r\n\r\n    const differenceComponent = () => ((product1 && product2) && <div className={classes.difference}>\r\n        {(productResult !== null) && <Typography component=\"p\" color=\"inherit\">Price difference: R{(product1.price > product2.price) ? product1.price - product2.price : product2.price - product1.price}</Typography>}\r\n    </div>);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (event, product) => {\r\n        if (event.target.checked) {\r\n            setProduct1(product);\r\n            if (product2 === null && product !== product1) {\r\n                setProduct2(product);\r\n            }\r\n        } else {\r\n            setProduct1(null);\r\n            setProduct2(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.logo}>\r\n                <img src=\"logo.png\" width='25%' height='25%' alt=\"Super Saiyan Search Logo\" />\r\n            </div>\r\n            <div className={classes.search}>\r\n                {!isSearchClicked && <TextField id=\"search\" label=\"Keyword\" aria-label=\"Keyword\" value={keyword !== null ? keyword : \"\"} onChange={e => setKeyword(e.target.value)} onKeyDown={handleKeyDown} fullWidth required />}\r\n                {(productResult === null && isSearchClicked) && <div className={classes.progress}><CircularProgress aria-label=\"loading\" /></div>}\r\n            </div>\r\n            <div className={classes.searchButton}>\r\n                {!isSearchClicked && <Button variant=\"contained\" color=\"primary\" aria-label=\"Search\" onClick={handleButtonClick}>Search</Button>}\r\n            </div>\r\n            {resultsComponent()}\r\n            {differenceComponent()}\r\n            <div className={classes.root}>\r\n                <GridList component=\"ul\">\r\n                    {(productResult !== null) && productResult.products.map((product, index) => (\r\n                        <GridListTile key={`${product.source}-${index}`}>\r\n                            <div className={classes.linkCheck}>\r\n                                <Link color=\"inherit\" href={product.sourceUrl} target=\"_blank\">\r\n                                    <img src={product.imageUrl} alt={product.name} width=\"55%\" height=\"100%\" />\r\n                                    <GridListTileBar\r\n                                        title={product.name}\r\n                                        subtitle={\r\n                                            <React.Fragment>\r\n                                                <div>Price: R{product.price}</div>\r\n                                                <div>Source: {product.source}</div>\r\n                                            </React.Fragment>\r\n                                        } />\r\n                                </Link>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    checked={(product1 === product) ? true : (product2 === product) ? true : false}\r\n                                    inputProps={{ 'aria-label': product.name }}\r\n                                    onChange={(event) => handleChange(event, product)}\r\n                                />\r\n                            </div>\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n            {resultsComponent()}\r\n            <Snackbar anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n            }} open={open} message={<span>{message}</span>} autoHideDuration={6000} onClose={handleClose} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchPage from './Pages/SearchPage';\r\nimport Settings from './settings.json';\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright '}{'\\u2122'}{' '}\r\n        Super Saiyan Search\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function App() {\r\n  let query = useQuery();\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Router>\r\n        <SearchPage hostUrl={Settings.hostUrl} isTest={Settings.isTest} q={query.get(\"q\")} />\r\n      </Router>\r\n      <Copyright />\r\n    </Container>\r\n  );\r\n}\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#007bff',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n    <CssBaseline />\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}